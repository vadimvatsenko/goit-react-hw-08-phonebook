{"version":3,"file":"static/js/242.220e27d3.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/cssVars/cssVarsParser.js","../node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js","../node_modules/@mui/system/esm/cssVars/useCurrentColorScheme.js","../node_modules/@mui/system/esm/cssVars/createCssVarsProvider.js","../node_modules/@mui/system/esm/cssVars/createGetCssVar.js","../node_modules/@mui/material/styles/experimental_extendTheme.js","../node_modules/@mui/material/styles/excludeVariablesFromRoot.js","../node_modules/@mui/material/styles/CssVarsProvider.js","../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js"],"sourcesContent":["/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value, arrayKeys = []) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (Array.isArray(temp)) {\n        temp[Number(k)] = value;\n      } else if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = arrayKeys.includes(k) ? [] : {};\n      }\n      temp = temp[k];\n    }\n  });\n};\n\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = [], arrayKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key], Array.isArray(value) ? [...arrayKeys, key] : arrayKeys);\n          } else {\n            callback([...parentKeys, key], value, arrayKeys);\n          }\n        }\n      }\n    });\n  }\n  recurse(obj);\n};\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n    const lastKey = keys[keys.length - 1];\n    if (lastKey.toLowerCase().indexOf('opacity') >= 0) {\n      // opacity values are unitless\n      return value;\n    }\n    return `${value}px`;\n  }\n  return value;\n};\n\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `prefix`: The prefix of the generated CSS variables. This function does not change the value.\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme).\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: 'var(--color)' } }\n * }, { prefix: 'foo' })\n *\n * console.log(css) // { '--foo-fontSize': '12px', '--foo-lineHeight': 1.2, '--foo-palette-primary-500': 'var(--color)' }\n * console.log(vars) // { fontSize: 'var(--foo-fontSize)', lineHeight: 'var(--foo-lineHeight)', palette: { primary: { 500: 'var(--foo-palette-primary-500)' } } }\n */\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(theme, (keys, value, arrayKeys) => {\n    if (typeof value === 'string' || typeof value === 'number') {\n      if (!shouldSkipGeneratingVar || !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`, arrayKeys);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n\n  return {\n    css,\n    vars\n  };\n}","import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE,\n    colorSchemeNode = 'document.documentElement'\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n        var cssColorScheme = mode;\n        var colorScheme = '';\n        if (mode === 'system') {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            cssColorScheme = 'dark';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            cssColorScheme = 'light';\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          ${colorSchemeNode}.setAttribute('${attribute}', colorScheme);\n        }\n      } catch (e) {} })();`\n    }\n  }, \"mui-color-scheme-init\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { DEFAULT_MODE_STORAGE_KEY, DEFAULT_COLOR_SCHEME_STORAGE_KEY } from './getInitColorSchemeScript';\nexport function getSystemMode(mode) {\n  if (typeof window !== 'undefined' && mode === 'system') {\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      return 'dark';\n    }\n    return 'light';\n  }\n  return undefined;\n}\nfunction processState(state, callback) {\n  if (state.mode === 'light' || state.mode === 'system' && state.systemMode === 'light') {\n    return callback('light');\n  }\n  if (state.mode === 'dark' || state.mode === 'system' && state.systemMode === 'dark') {\n    return callback('dark');\n  }\n  return undefined;\n}\nexport function getColorScheme(state) {\n  return processState(state, mode => {\n    if (mode === 'light') {\n      return state.lightColorScheme;\n    }\n    if (mode === 'dark') {\n      return state.darkColorScheme;\n    }\n    return undefined;\n  });\n}\nfunction initializeValue(key, defaultValue) {\n  if (typeof window === 'undefined') {\n    return undefined;\n  }\n  let value;\n  try {\n    value = localStorage.getItem(key) || undefined;\n    if (!value) {\n      // the first time that user enters the site.\n      localStorage.setItem(key, defaultValue);\n    }\n  } catch (e) {\n    // Unsupported\n  }\n  return value || defaultValue;\n}\nexport default function useCurrentColorScheme(options) {\n  const {\n    defaultMode = 'light',\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    supportedColorSchemes = [],\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    storageWindow = typeof window === 'undefined' ? undefined : window\n  } = options;\n  const joinedColorSchemes = supportedColorSchemes.join(',');\n  const [state, setState] = React.useState(() => {\n    const initialMode = initializeValue(modeStorageKey, defaultMode);\n    const lightColorScheme = initializeValue(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n    const darkColorScheme = initializeValue(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n    return {\n      mode: initialMode,\n      systemMode: getSystemMode(initialMode),\n      lightColorScheme,\n      darkColorScheme\n    };\n  });\n  const colorScheme = getColorScheme(state);\n  const setMode = React.useCallback(mode => {\n    setState(currentState => {\n      if (mode === currentState.mode) {\n        // do nothing if mode does not change\n        return currentState;\n      }\n      const newMode = !mode ? defaultMode : mode;\n      try {\n        localStorage.setItem(modeStorageKey, newMode);\n      } catch (e) {\n        // Unsupported\n      }\n      return _extends({}, currentState, {\n        mode: newMode,\n        systemMode: getSystemMode(newMode)\n      });\n    });\n  }, [modeStorageKey, defaultMode]);\n  const setColorScheme = React.useCallback(value => {\n    if (!value) {\n      setState(currentState => {\n        try {\n          localStorage.setItem(`${colorSchemeStorageKey}-light`, defaultLightColorScheme);\n          localStorage.setItem(`${colorSchemeStorageKey}-dark`, defaultDarkColorScheme);\n        } catch (e) {\n          // Unsupported\n        }\n        return _extends({}, currentState, {\n          lightColorScheme: defaultLightColorScheme,\n          darkColorScheme: defaultDarkColorScheme\n        });\n      });\n    } else if (typeof value === 'string') {\n      if (value && !joinedColorSchemes.includes(value)) {\n        console.error(`\\`${value}\\` does not exist in \\`theme.colorSchemes\\`.`);\n      } else {\n        setState(currentState => {\n          const newState = _extends({}, currentState);\n          processState(currentState, mode => {\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-${mode}`, value);\n            } catch (e) {\n              // Unsupported\n            }\n            if (mode === 'light') {\n              newState.lightColorScheme = value;\n            }\n            if (mode === 'dark') {\n              newState.darkColorScheme = value;\n            }\n          });\n          return newState;\n        });\n      }\n    } else {\n      setState(currentState => {\n        const newState = _extends({}, currentState);\n        const newLightColorScheme = value.light === null ? defaultLightColorScheme : value.light;\n        const newDarkColorScheme = value.dark === null ? defaultDarkColorScheme : value.dark;\n        if (newLightColorScheme) {\n          if (!joinedColorSchemes.includes(newLightColorScheme)) {\n            console.error(`\\`${newLightColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.lightColorScheme = newLightColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-light`, newLightColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        if (newDarkColorScheme) {\n          if (!joinedColorSchemes.includes(newDarkColorScheme)) {\n            console.error(`\\`${newDarkColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n          } else {\n            newState.darkColorScheme = newDarkColorScheme;\n            try {\n              localStorage.setItem(`${colorSchemeStorageKey}-dark`, newDarkColorScheme);\n            } catch (error) {\n              // Unsupported\n            }\n          }\n        }\n        return newState;\n      });\n    }\n  }, [joinedColorSchemes, colorSchemeStorageKey, defaultLightColorScheme, defaultDarkColorScheme]);\n  const handleMediaQuery = React.useCallback(e => {\n    if (state.mode === 'system') {\n      setState(currentState => _extends({}, currentState, {\n        systemMode: e != null && e.matches ? 'dark' : 'light'\n      }));\n    }\n  }, [state.mode]);\n\n  // Ref hack to avoid adding handleMediaQuery as a dep\n  const mediaListener = React.useRef(handleMediaQuery);\n  mediaListener.current = handleMediaQuery;\n  React.useEffect(() => {\n    const handler = (...args) => mediaListener.current(...args);\n\n    // Always listen to System preference\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n\n    // Intentionally use deprecated listener methods to support iOS & old browsers\n    media.addListener(handler);\n    handler(media);\n    return () => media.removeListener(handler);\n  }, []);\n\n  // Handle when localStorage has changed\n  React.useEffect(() => {\n    const handleStorage = event => {\n      const value = event.newValue;\n      if (typeof event.key === 'string' && event.key.startsWith(colorSchemeStorageKey) && (!value || joinedColorSchemes.match(value))) {\n        // If the key is deleted, value will be null then reset color scheme to the default one.\n        if (event.key.endsWith('light')) {\n          setColorScheme({\n            light: value\n          });\n        }\n        if (event.key.endsWith('dark')) {\n          setColorScheme({\n            dark: value\n          });\n        }\n      }\n      if (event.key === modeStorageKey && (!value || ['light', 'dark', 'system'].includes(value))) {\n        setMode(value || defaultMode);\n      }\n    };\n    if (storageWindow) {\n      // For syncing color-scheme changes between iframes\n      storageWindow.addEventListener('storage', handleStorage);\n      return () => storageWindow.removeEventListener('storage', handleStorage);\n    }\n    return undefined;\n  }, [setColorScheme, setMode, modeStorageKey, colorSchemeStorageKey, joinedColorSchemes, defaultMode, storageWindow]);\n  return _extends({}, state, {\n    colorScheme,\n    setMode,\n    setColorScheme\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nconst _excluded = [\"colorSchemes\", \"components\", \"cssVarPrefix\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { deepmerge } from '@mui/utils';\nimport { GlobalStyles } from '@mui/styled-engine';\nimport { useTheme as muiUseTheme } from '@mui/private-theming';\nimport cssVarsParser from './cssVarsParser';\nimport ThemeProvider from '../ThemeProvider';\nimport systemGetInitColorSchemeScript, { DEFAULT_ATTRIBUTE, DEFAULT_COLOR_SCHEME_STORAGE_KEY, DEFAULT_MODE_STORAGE_KEY } from './getInitColorSchemeScript';\nimport useCurrentColorScheme from './useCurrentColorScheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexport default function createCssVarsProvider(options) {\n  const {\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: designSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    shouldSkipGeneratingVar: designSystemShouldSkipGeneratingVar,\n    resolveTheme,\n    excludeVariablesFromRoot\n  } = options;\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : _formatMuiErrorMessage(19));\n    }\n    return value;\n  };\n  function CssVarsProvider({\n    children,\n    theme: themeProp = defaultTheme,\n    modeStorageKey = defaultModeStorageKey,\n    colorSchemeStorageKey = defaultColorSchemeStorageKey,\n    attribute = defaultAttribute,\n    defaultMode = designSystemMode,\n    defaultColorScheme = designSystemColorScheme,\n    disableTransitionOnChange = designSystemTransitionOnChange,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    documentNode = typeof document === 'undefined' ? undefined : document,\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n    colorSchemeSelector = ':root',\n    shouldSkipGeneratingVar = designSystemShouldSkipGeneratingVar,\n    disableNestedContext = false,\n    disableStyleSheetGeneration = false\n  }) {\n    const hasMounted = React.useRef(false);\n    const upperTheme = muiUseTheme();\n    const ctx = React.useContext(ColorSchemeContext);\n    const nested = !!ctx && !disableNestedContext;\n    const {\n        colorSchemes = {},\n        components = {},\n        cssVarPrefix\n      } = themeProp,\n      restThemeProp = _objectWithoutPropertiesLoose(themeProp, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n\n    // 1. Get the data about the `mode`, `colorScheme`, and setter functions.\n    const {\n      mode: stateMode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme: stateColorScheme,\n      setColorScheme\n    } = useCurrentColorScheme({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n    let mode = stateMode;\n    let colorScheme = stateColorScheme;\n    if (nested) {\n      mode = ctx.mode;\n      colorScheme = ctx.colorScheme;\n    }\n    const calculatedMode = (() => {\n      if (!mode) {\n        // This scope occurs on the server\n        if (defaultMode === 'system') {\n          return designSystemMode;\n        }\n        return defaultMode;\n      }\n      return mode;\n    })();\n    const calculatedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (calculatedMode === 'dark') {\n          return defaultDarkColorScheme;\n        }\n        // use light color scheme, if default mode is 'light' | 'system'\n        return defaultLightColorScheme;\n      }\n      return colorScheme;\n    })();\n\n    // 2. Create CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = cssVarsParser(restThemeProp, {\n      prefix: cssVarPrefix,\n      shouldSkipGeneratingVar\n    });\n\n    // 3. Start composing the theme object\n    const theme = _extends({}, restThemeProp, {\n      components,\n      colorSchemes,\n      cssVarPrefix,\n      vars: rootVars,\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n\n    // 4. Create color CSS variables and store them in objects (to be generated in stylesheets in the final step)\n    //    The default color scheme stylesheet is constructed to have the least CSS specificity.\n    //    The other color schemes uses selector, default as data attribute, to increase the CSS specificity so that they can override the default color scheme stylesheet.\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = cssVarsParser(scheme, {\n        prefix: cssVarPrefix,\n        shouldSkipGeneratingVar\n      });\n      theme.vars = deepmerge(theme.vars, vars);\n      if (key === calculatedColorScheme) {\n        // 4.1 Merge the selected color scheme to the theme\n        Object.keys(scheme).forEach(schemeKey => {\n          if (scheme[schemeKey] && typeof scheme[schemeKey] === 'object') {\n            // shallow merge the 1st level structure of the theme.\n            theme[schemeKey] = _extends({}, theme[schemeKey], scheme[schemeKey]);\n          } else {\n            theme[schemeKey] = scheme[schemeKey];\n          }\n        });\n        if (theme.palette) {\n          theme.palette.colorScheme = key;\n        }\n      }\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n        return defaultColorScheme.light;\n      })();\n      if (key === resolvedDefaultColorScheme) {\n        if (excludeVariablesFromRoot) {\n          const excludedVariables = {};\n          excludeVariablesFromRoot(cssVarPrefix).forEach(cssVar => {\n            excludedVariables[cssVar] = css[cssVar];\n            delete css[cssVar];\n          });\n          defaultColorSchemeStyleSheet[`[${attribute}=\"${key}\"]`] = excludedVariables;\n        }\n        defaultColorSchemeStyleSheet[`${colorSchemeSelector}, [${attribute}=\"${key}\"]`] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n\n    // 5. Declaring effects\n    // 5.1 Updates the selector value to use the current color scheme which tells CSS to use the proper stylesheet.\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n\n    // 5.2 Remove the CSS transition when color scheme changes to create instant experience.\n    // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n    React.useEffect(() => {\n      let timer;\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css);\n\n        // Force browser repaint\n        (() => window.getComputedStyle(documentNode.body))();\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    const contextValue = React.useMemo(() => ({\n      mode,\n      systemMode,\n      setMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme,\n      allColorSchemes\n    }), [allColorSchemes, colorScheme, darkColorScheme, lightColorScheme, mode, setColorScheme, setMode, systemMode]);\n    let shouldGenerateStyleSheet = true;\n    if (disableStyleSheetGeneration || nested && (upperTheme == null ? void 0 : upperTheme.cssVarPrefix) === cssVarPrefix) {\n      shouldGenerateStyleSheet = false;\n    }\n    const element = /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [shouldGenerateStyleSheet && /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [/*#__PURE__*/_jsx(GlobalStyles, {\n          styles: {\n            [colorSchemeSelector]: rootCss\n          }\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: defaultColorSchemeStyleSheet\n        }), /*#__PURE__*/_jsx(GlobalStyles, {\n          styles: otherColorSchemesStyleSheet\n        })]\n      }), /*#__PURE__*/_jsx(ThemeProvider, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n    if (nested) {\n      return element;\n    }\n    return /*#__PURE__*/_jsx(ColorSchemeContext.Provider, {\n      value: contextValue,\n      children: element\n    });\n  }\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: PropTypes.string,\n    /**\n     * The component tree.\n     */\n    children: PropTypes.node,\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: PropTypes.any,\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: PropTypes.string,\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: PropTypes.string,\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * The initial mode used.\n     */\n    defaultMode: PropTypes.string,\n    /**\n     * If `true`, the provider creates its own context and generate stylesheet as if it is a root `CssVarsProvider`.\n     */\n    disableNestedContext: PropTypes.bool,\n    /**\n     * If `true`, the style sheet won't be generated.\n     *\n     * This is useful for controlling nested CssVarsProvider behavior.\n     */\n    disableStyleSheetGeneration: PropTypes.bool,\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: PropTypes.bool,\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: PropTypes.any,\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: PropTypes.string,\n    /**\n     * A function to determine if the key, value should be attached as CSS Variable\n     */\n    shouldSkipGeneratingVar: PropTypes.func,\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: PropTypes.any,\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: PropTypes.object\n  } : void 0;\n  const defaultLightColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.light;\n  const defaultDarkColorScheme = typeof designSystemColorScheme === 'string' ? designSystemColorScheme : designSystemColorScheme.dark;\n  const getInitColorSchemeScript = params => systemGetInitColorSchemeScript(_extends({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    defaultMode: designSystemMode,\n    defaultLightColorScheme,\n    defaultDarkColorScheme,\n    modeStorageKey: defaultModeStorageKey\n  }, params));\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","/**\n * The benefit of this function is to help developers get CSS var from theme without specifying the whole variable\n * and they does not need to remember the prefix (defined once).\n */\nexport default function createGetCssVar(prefix = '') {\n  function appendVar(...vars) {\n    if (!vars.length) {\n      return '';\n    }\n    const value = vars[0];\n    if (typeof value === 'string' && !value.match(/(#|\\(|\\)|(-?(\\d*\\.)?\\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))/)) {\n      return `, var(--${prefix ? `${prefix}-` : ''}${value}${appendVar(...vars.slice(1))})`;\n    }\n    return `, ${value}`;\n  }\n\n  // AdditionalVars makes `getCssVar` less strict, so it can be use like this `getCssVar('non-mui-variable')` without type error.\n  const getCssVar = (field, ...fallbacks) => {\n    return `var(--${prefix ? `${prefix}-` : ''}${field}${appendVar(...fallbacks)})`;\n  };\n  return getCssVar;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n  _excluded2 = [\"palette\"];\nimport { deepmerge } from '@mui/utils';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, unstable_createGetCssVar as systemCreateGetCssVar, unstable_defaultSxConfig as defaultSxConfig, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport createThemeWithoutVars from './createTheme';\nimport getOverlayAlpha from './getOverlayAlpha';\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n  const overlay = getOverlayAlpha(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(obj[key], `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, e.g. \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nexport const createGetCssVar = (cssVarPrefix = 'mui') => systemCreateGetCssVar(cssVarPrefix);\nexport default function extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n  const {\n      colorSchemes: colorSchemesInput = {},\n      cssVarPrefix = 'mui'\n    } = options,\n    input = _objectWithoutPropertiesLoose(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const _createThemeWithoutVa = createThemeWithoutVars(_extends({}, input, colorSchemesInput.light && {\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n    })),\n    {\n      palette: lightPalette\n    } = _createThemeWithoutVa,\n    muiTheme = _objectWithoutPropertiesLoose(_createThemeWithoutVa, _excluded2);\n  const {\n    palette: darkPalette\n  } = createThemeWithoutVars({\n    palette: _extends({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = _extends({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: _extends({}, colorSchemesInput, {\n      light: _extends({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: _extends({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: _extends({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: _extends({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n\n    // attach black & white channels to common node\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(colors.main));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(colors.light));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(colors.dark));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(colors.contrastText));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  theme.unstable_sxConfig = _extends({}, defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  return theme;\n}","/**\n * @internal These variables should not appear in the :root stylesheet when the `defaultMode=\"dark\"`\n */\nconst excludeVariablesFromRoot = cssVarPrefix => [...[...Array(24)].map((_, index) => `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}overlays-${index + 1}`), `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkBg`, `--${cssVarPrefix ? `${cssVarPrefix}-` : ''}palette-AppBar-darkColor`];\nexport default excludeVariablesFromRoot;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_createCssVarsProvider as createCssVarsProvider, unstable_styleFunctionSx as styleFunctionSx } from '@mui/system';\nimport experimental_extendTheme from './experimental_extendTheme';\nimport createTypography from './createTypography';\nimport excludeVariablesFromRoot from './excludeVariablesFromRoot';\nconst shouldSkipGeneratingVar = keys => {\n  var _keys$;\n  return !!keys[0].match(/(typography|mixins|breakpoints|direction|transitions)/) || !!keys[0].match(/sxConfig$/) ||\n  // ends with sxConfig\n  keys[0] === 'palette' && !!((_keys$ = keys[1]) != null && _keys$.match(/(mode|contrastThreshold|tonalOffset)/));\n};\nconst defaultTheme = experimental_extendTheme();\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  theme: defaultTheme,\n  attribute: 'data-mui-color-scheme',\n  modeStorageKey: 'mui-mode',\n  colorSchemeStorageKey: 'mui-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  },\n  resolveTheme: theme => {\n    const newTheme = _extends({}, theme, {\n      typography: createTypography(theme.palette, theme.typography)\n    });\n    newTheme.unstable_sx = function sx(props) {\n      return styleFunctionSx({\n        sx: props,\n        theme: this\n      });\n    };\n    return newTheme;\n  },\n  shouldSkipGeneratingVar,\n  excludeVariablesFromRoot\n});\nexport { useColorScheme, getInitColorSchemeScript, shouldSkipGeneratingVar, CssVarsProvider as Experimental_CssVarsProvider };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;"],"names":["cssVarsParser","theme","options","callback","shouldSkipPaths","prefix","shouldSkipGeneratingVar","css","vars","keys","value","arrayKeys","cssVar","join","Object","assign","some","prop","includes","length","toLowerCase","indexOf","getCssValue","obj","temp","forEach","k","index","Array","isArray","Number","assignNestedKeys","recurse","object","parentKeys","entries","key","undefined","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getSystemMode","mode","window","matchMedia","matches","processState","state","systemMode","initializeValue","defaultValue","localStorage","getItem","setItem","e","useCurrentColorScheme","defaultMode","defaultLightColorScheme","defaultDarkColorScheme","supportedColorSchemes","modeStorageKey","colorSchemeStorageKey","storageWindow","joinedColorSchemes","React","initialMode","lightColorScheme","darkColorScheme","setState","colorScheme","getColorScheme","setMode","currentState","newMode","_extends","setColorScheme","console","error","newState","newLightColorScheme","light","newDarkColorScheme","dark","handleMediaQuery","mediaListener","current","handler","media","addListener","removeListener","handleStorage","event","newValue","startsWith","match","endsWith","addEventListener","removeEventListener","_excluded","createGetCssVar","appendVar","slice","getCssVar","field","fallbacks","_excluded2","defaultDarkOverlays","map","_","overlay","getOverlayAlpha","assignNode","setColor","setColorChannel","safeColorChannel","silent","fn","cssVarPrefix","systemCreateGetCssVar","defaultTheme","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","input","_objectWithoutPropertiesLoose","_createThemeWithoutVa","createThemeWithoutVars","palette","lightPalette","muiTheme","darkPalette","opacity","inputPlaceholder","inputUnderline","switchTrackDisabled","switchTrack","overlays","common","Alert","safeDarken","info","success","warning","getContrastText","main","safeLighten","AppBar","Avatar","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","Slider","snackbarContentBackground","safeEmphasize","background","default","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","safeAlpha","divider","Tooltip","grey","color","colors","contrastText","active","selected","args","reduce","acc","argument","deepmerge","unstable_sxConfig","defaultSxConfig","unstable_sx","props","styleFunctionSx","sx","this","experimental_extendTheme","attribute","defaultAttribute","defaultModeStorageKey","defaultColorSchemeStorageKey","designSystemMode","designSystemColorScheme","defaultColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","designSystemShouldSkipGeneratingVar","resolveTheme","excludeVariablesFromRoot","ColorSchemeContext","CssVarsProvider","children","themeProp","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","disableNestedContext","disableStyleSheetGeneration","hasMounted","upperTheme","muiUseTheme","ctx","nested","components","restThemeProp","allColorSchemes","stateMode","stateColorScheme","calculatedColorScheme","rootCss","rootVars","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","scheme","schemeKey","excludedVariables","setAttribute","timer","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","contextValue","shouldGenerateStyleSheet","element","_jsxs","_jsx","GlobalStyles","styles","ThemeProvider","Provider","useColorScheme","Error","_formatMuiErrorMessage","getInitColorSchemeScript","params","dangerouslySetInnerHTML","__html","systemGetInitColorSchemeScript","createCssVarsProvider","newTheme","typography","createTypography","_keys$","globalStyles","themeInput","Global"],"sourceRoot":""}